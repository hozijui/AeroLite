<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cdipcc.aerolite.server.dao.UserDao">

    <resultMap id="UserMap" type="cn.cdipcc.aerolite.server.entity.User">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="department" column="department" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP"/>
        <result property="lastLogin" column="last_login" jdbcType="TIMESTAMP"/>
        <result property="enabled" column="enabled" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="UserInfoMap" type="cn.cdipcc.aerolite.server.dto.UserInfo">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="department" column="department" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP"/>
        <result property="lastLogin" column="last_login" jdbcType="TIMESTAMP"/>
        <result property="enabled" column="enabled" jdbcType="INTEGER"/>
        <collection javaType="java.util.Set" ofType="cn.cdipcc.aerolite.server.dto.UserInfo$SimpleRole"
                    property="roles" column="id" select="queryRoleByUserId" />
        <collection javaType="java.util.Set" ofType="java.lang.String" property="permissions"
                    column="id" select="queryPermissionByUserId" />
    </resultMap>

    <resultMap id="UserRoleMap" type="cn.cdipcc.aerolite.server.dto.UserRole">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="department" column="department" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP"/>
        <result property="lastLogin" column="last_login" jdbcType="TIMESTAMP"/>
        <result property="enabled" column="enabled" jdbcType="INTEGER"/>
        <collection javaType="java.util.ArrayList" ofType="cn.cdipcc.aerolite.server.entity.Role" property="roles">
            <id property="id" column="r_id" jdbcType="BIGINT"/>
            <result property="role" column="role" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="createTime" column="r_create_time" jdbcType="TIMESTAMP"/>
            <result property="modifyTime" column="r_modify_time" jdbcType="TIMESTAMP"/>
            <result property="enabled" column="r_enabled" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <resultMap id="SimpleRoleMap" type="cn.cdipcc.aerolite.server.dto.UserInfo$SimpleRole">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, username, password, nickname, department, create_time, modify_time, last_login, enabled
        from sys_user
        where id = #{id}
    </select>

    <select id="queryByUsername" resultMap="UserMap">
        select
            id, username, password, nickname, department, create_time, modify_time, last_login, enabled
        from sys_user
        where username = #{username}
    </select>

    <!--查询全部（分页）-->
    <select id="queryAll" resultMap="UserInfoMap">
        select
          id, username, password, nickname, department, create_time, modify_time, last_login, enabled
        from sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="department != null and department != ''">
                and department = #{department}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="modifyTime != null">
                and modify_time = #{modifyTime}
            </if>
            <if test="lastLogin != null">
                and last_login = #{lastLogin}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="department != null and department != ''">
                and department = #{department}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="modifyTime != null">
                and modify_time = #{modifyTime}
            </if>
            <if test="lastLogin != null">
                and last_login = #{lastLogin}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user(username, password, nickname, department, create_time, modify_time, last_login, enabled)
        values (#{username}, #{password}, #{nickname}, #{department}, #{createTime}, #{modifyTime}, #{lastLogin}, #{enabled})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user(username, password, nickname, department, create_time, modify_time, last_login, enabled)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.username}, #{entity.password}, #{entity.nickname}, #{entity.department}, #{entity.createTime}, #{entity.modifyTime}, #{entity.lastLogin}, #{entity.enabled})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user(username, password, nickname, department, create_time, modify_time, last_login, enabled)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.nickname}, #{entity.department}, #{entity.createTime}, #{entity.modifyTime}, #{entity.lastLogin}, #{entity.enabled})
        </foreach>
        on duplicate key update
        username = values(username),
        password = values(password),
        nickname = values(nickname),
        department = values(department),
        create_time = values(create_time),
        modify_time = values(modify_time),
        last_login = values(last_login),
        enabled = values(enabled)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sys_user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="department != null and department != ''">
                department = #{department},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime},
            </if>
            <if test="lastLogin != null">
                last_login = #{lastLogin},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete sys_user.*, sys_user_role.*
        from sys_user, sys_user_role
        where sys_user.id = #{id} and sys_user_role.user_id = #{id}
    </delete>

    <insert id="insertUserRole" useGeneratedKeys="true">
        insert into sys_user_role(user_id, role_id)
        values (#{user_id}, #{role_id})
    </insert>

    <delete id="deleteUserRole">
        delete from sys_user_role
        where sys_user_role.user_id = #{id}
    </delete>

    <select id="getRolesByUsername" resultMap="UserRoleMap">
        select
          u.id, u.username, u.password, u.nickname, u.department, u.create_time, u.modify_time, u.last_login, u.enabled,
          r.id as r_id, r.role, r.name, r.description,
          r.create_time as r_create_time,
          r.modify_time as r_modify_time,
          r.enabled as r_enabled
        from sys_user as u
        left join sys_user_role as ur on u.id = ur.user_id
        left join sys_role as r on ur.role_id = r.id
        where u.username = #{username};
    </select>

    <select id="getUserInfo" resultMap="UserInfoMap">
        select
          id, username, password, nickname, department, create_time, modify_time, last_login, enabled
        from sys_user
        <where>
            <if test="username != null and username !=''">
                and username = #{username}
            </if>
            <if test="id != null and id !=''">
                and id = #{id}
            </if>
        </where>
    </select>

    <select id="queryRoleByUserId" resultMap="SimpleRoleMap">
        select sys_role.id, role, name from sys_role
        left join sys_user_role on sys_role.id = sys_user_role.role_id
        where sys_user_role.user_id = #{id}
    </select>

    <select id="queryPermissionByUserId" resultType="java.lang.String">
        select permission from sys_permission
        left join sys_role_permission on sys_permission.id = sys_role_permission.permission_id
        left join sys_role on sys_role_permission.role_id = sys_role.id
        left join sys_user_role on sys_role.id = sys_user_role.role_id
        where sys_user_role.user_id = #{id}
    </select>

</mapper>

